import numpy as np 
import numpy as np
import matplotlib.pyplot as plt

# Define parameters
D = 0.1  # Diffusion coefficient
L = 1.0  # Length of the domain
N = 200  # Number of grid points
T = 0.05  # Total time
dt = 0.00005  # Time step size

# Calculate grid spacing
dx = L / (N - 1)

print("Courant number: ", D * dt / dx**2)

# Create grid
x = np.linspace(0, L, N)
y = np.linspace(0, L, N)
X, Y = np.meshgrid(x, y)

# Initialize concentration field
C = np.zeros((N, N))
C[N//2, N//2] = 1.0  # Initial condition

# Solve the diffusion equation
num_steps = int(T / dt)
print(dx)
for step in range(num_steps):
    # Calculate Laplacian using finite difference method
    laplacian = (np.roll(C, 1, axis=0) + np.roll(C, -1, axis=0) + np.roll(C, 1, axis=1) + np.roll(C, -1, axis=1) - 4 * C) / dx**2

    # Update concentration field
    C += D * dt * laplacian

# Plot the concentration fieldc
plt.imshow(C, cmap='hot', origin='lower', extent=[0, L, 0, L])
plt.colorbar(label='Concentration')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Diffusion Equation')
plt.show()